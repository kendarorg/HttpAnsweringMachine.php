#docker build -t myvpn .
#docker run --privileged --cap-add SYS_ADMIN --cap-add DAC_READ_SEARCH --name myvpn myvpn
FROM ubuntu:groovy
RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y bash vim
RUN apt-get install -y tar gzip

COPY openconnect-8.10.tar.gz openconnect-8.10.tar.gz
RUN tar -xvf openconnect-8.10.tar.gz

RUN apt-get install -y  iptables openssl  libxml2 socat openssh-client iptables-persistent
RUN apt-get install -y curl file g++ gnutls-dev  gzip libev-dev net-tools gettext
RUN apt-get install -y  linux-headers-generic make tar sed procps pkg-config libgnutls28-dev
RUN apt-get install -y zlib1g-dev libxml2-dev libuid-wrapper build-essential iputils-ping 
RUN apt-get install -y vpnc-scripts  libssl-dev libproxy-dev libkrb5-dev iproute2

RUN echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf


WORKDIR openconnect-8.10
RUN ./configure --prefix=/opt/openconnect
RUN make check
RUN make
RUN make install

WORKDIR /
#RUN update-alternatives --set iptables /usr/sbin/iptables-legacy
#RUN ip tuntap add name tun0 mode tun
#RUN iptables -S
#RUN iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE
#RUN iptables -A FORWARD -i eth0 -o tun0 -j ACCEPT
#RUN iptables -A FORWARD -o tun0 -j ACCEPT
#RUN iptables -A FORWARD -i tun0 -m conntrack --ctstate ESTABLISHED,RELATED   -j ACCEPT
#RUN iptables -A INPUT -i tun0 -j ACCEPT
#RUN iptables-save > /etc/iptables/rules.v4
#RUN netfilter-persistent save

#RUN rm -rf openconnect-8.10
#RUN rm openconnect-8.10.tar.gz
  
RUN mkdir /svcs
RUN mkdir /runonce
COPY startup.sh startup.sh
COPY connect.sh connect.sh
RUN chmod 777 *.sh
ADD svcs /svcs
ADD runonce /runonce
RUN chmod -R 777 /svcs
RUN chmod -R 777 /runonce
CMD ./startup.sh

